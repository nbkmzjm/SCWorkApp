doctype html
html(lang="en")
	head
		title Jade Page
		meta(charset='UTF-8')
		link(rel="stylesheet" type="text/css" href="bower_components/bootstrap/dist/css/bootstrap.css")
		link(rel="stylesheet" type="text/css" href="css/style.css")
		link(rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css")
		link(href="https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet")

	body
		
		#container
			//- input(type='text' id='calendar')

			#calenderPick
				p bbbb
				#mainSC



		

			//- table#main
			//- 	- var test = users
			//- 	p#test= test 
			//- 	tr
			//- 		td= 'User'
			//- 		- for (var i=4; i < 14 ; i++)
			//- 			td= dateHeader[i].dateH
			//- 	- for (var i=0; i< users.length; i++)
			//- 		tr
			//- 			td= users[i].email
						//- - for (var e=0; e< 14; e++)
							if (typeof assigns[9] == "undefined")
								td= a
							else 

								assigns [e].datePos == e && assigns[e].user.email == users[i].email) 
								td= assigns[e].Note
						



			


	
	br
	a(href='/logout') Logout

			


			
	script(src="public/js/jquery-2.1.4.min.js")
	script(src="public/js/socket.io-1.3.7.js")
	script(src="public/js/app.js")
	script(src="public/js/date.js")
	script(src="https://code.jquery.com/ui/1.10.4/jquery-ui.js")
	script(src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js")
	script.

		$(function (){
			
						
			calendarPick();
	
			$.post('/ajaxUser').done(mainSC);

			//- $.post('/mainSC', { postdata:{name: "John", time: "2pm" }}).done(function(data){
			//- 	alert(data.dateHeader[0].dateH);
			//- 	alert(data.users[0].email);
			//- 	})
			//- alert($('#calendar').val('bbbbbb'))

			//- $("#calendar").datepicker({onSelect: function(){
			//- 	$.post('/ajaxUser').done(mainSC);
			//- }});
		});

		

		function calendarPick(){

			var calenderPick = $('#calenderPick');
			//- calenderPick.html("");

			var dateCalender = document.createElement('input');
				dateCalender.id = 'calendar';
				
				dateCalender.value = new Date().toLocaleDateString()
				//- dateCalender.datepicker({onSelect: function(){
				//- 	}});
				dateCalender.addEventListener('focus', function(){
					$("#calendar").datepicker({onSelect: function(){
						$.post('/ajaxUser').done(mainSC);
					}});
				})
				
				

			var dateBackward = document.createElement('span');
				dateBackward.id = 'dateBackward';
				dateBackward.className = 'glyphicon glyphicon-step-backward'
				dateBackward.addEventListener('click', function(){

				var dateM7 = new Date(dateCalender.value);
				dateM7.setDate(dateM7.getDate()-7);
				dateCalender.value = dateM7.toLocaleDateString();
				$.post('/ajaxUser', {clickedData:true}).done(mainSC);

				})


			var dateForward = document.createElement('span');
				dateForward.id = 'dateForward';
				dateForward.className = 'glyphicon glyphicon-step-forward'
				dateForward.addEventListener('click', function(){

				
				var dateP7 = new Date(dateCalender.value);
				dateP7.setDate(dateP7.getDate()+7);
				dateCalender.value = dateP7.toLocaleDateString();
				$.post('/ajaxUser', {clickedData:true}).done(mainSC);

				})

			calenderPick.append(dateBackward)
			calenderPick.append(dateCalender)
			calenderPick.append(dateForward)

			
		}

		function getSunday(d){

			var d = new Date(d);
			var diff = d.getDate() - d.getDay();
			
			return new Date(d.setDate(diff));

		}

		function mainSC(data){
			
			var mainSC = $('#mainSC');
			mainSC.html('');

			var curDate = $('#calendar').val();
			var curSunday = getSunday(new Date(curDate));
			
			var dateSC = new Date(curSunday);
			
							

			
			var table = document.createElement('table');
			table.setAttribute('id', 'main');
			table.setAttribute('class','table')
			var tr = document.createElement('tr');
				var td = document.createElement('td');
					td.appendChild(document.createTextNode('User'));
				tr.appendChild(td);
				for (var i=0; i<7; i++){
					
					var td = document.createElement('td');
					td.appendChild(document.createTextNode(dateSC.toDateString()));
					td.addEventListener('click',function(){

					alert('drop cal');
					$.post('/ajaxUser').done(mainSC);
					});
					tr.appendChild(td);

					dateSC.setDate(dateSC.getDate()+1);
					
					}
			table.appendChild(tr);
			dateSC = new Date(curSunday);

			//- Create DateSC array with userID and dateSC
			var users = data.pData.users;
			var arrListDateSC = [];
				
			for (var i=0; i< users.length; i++){
			
				    for (var x=0; x<8; x++){
						var taskSCData = {};
						
						if (x==0){
							taskSCData.userId = users[i].id;
							taskSCData.dateSC = users[i].email;
						}else{
							taskSCData.userId = users[i].id;
							taskSCData.dateSC = dateSC.toLocaleDateString();
							dateSC.setDate(dateSC.getDate()+1);
						}
						arrListDateSC.push(taskSCData);
					}
					
				var dateSC = new Date(curSunday);
			}


			$.post('/sysObjRead', {pData:['lockoutDate', 'date21LK']}).done(function(rData){
				
				//- alert(JSON.stringify(arrListDateSC, null, 4))

				var today = new Date('8/1/17')
				var lockoutDate = new Date(rData.lockoutDate||'4/24/16')
				var date21LK = new Date(rData.lockoutDate||'4/24/16')
				date21LK.setDate(lockoutDate.getDate()-21)
					//- alert(today+'---'+date21LK)


				var i = 0;
				var userDelta = 0;
				//- Using array to assign userID and dateSc to cell of shcedule table 
				function loopArrayDateSC(arr){
				
					//- Pull taskSC from assign DB with provided userID and dateSC DB 
					$.post('/taskSC', {postdata:{userId: arr[i].userId, dateSC:arr[i].dateSC}}).done(
						function(assigndata){
							alert(JSON.stringify(assigndata, null, 4))
								


							//- display taskSC if found otherwise display blank
							if(!!assigndata.assign){
								var userId = assigndata.assign.userId;
								var taskSC = assigndata.assign.Note;

								var td = document.createElement('td');
								td.setAttribute('class','cell')
								td.appendChild(document.createTextNode(taskSC));
								td.addEventListener('click',function(userId,dateSC){
									return function(){

										var selDate = new Date(dateSC)
											
										if (selDate<lockoutDate){
											alert('lock')
										}else{
											var taskSC = $('input[name=PTO]:checked').attr('value');

											$.post('/dateSC', {postdata:{userId: userId, dateSC:dateSC, taskSC:taskSC}}).done(function(pData){

													if (pData.authorized == false) {
													alert('You are not authorized for this action')
												}else if(!!pData.Note){
												
												td.innerHTML=pData.Note;
												td.style.backgroundColor = 'yellow'
												} else{

												td.innerHTML='';
												td.style.backgroundColor = 'red'
												}
											});
										}
									}

								}(userId, dateSC.toLocaleDateString()));
							} else {
								var userId = assigndata.userId;
								var td = document.createElement('td');
								td.setAttribute('class','cell')
								td.appendChild(document.createTextNode(""));

								//- Click into the cell request PTO
								td.addEventListener('click',function(userId,dateSC){

									return function(){

										var selDate = new Date(dateSC)
										
										//- Prevent user to request after lockoutDate
										if (selDate<lockoutDate){
											alert('lock')
										}else{
										//- retrieved taskOption value from radio botton
										var taskSC = $('input[name=PTO]:checked').attr('value');

										//- save or update taskOption value into DB if not existed
										$.post('/dateSC', {postdata:{userId: userId, dateSC:dateSC, taskSC:taskSC}}).done(function(pData){
											
											//- Only allow signed in user to edit their request
											if (pData.authorized == false) {
												alert('You are not authorized for this action')
											}else if(!!pData.Note){
											
											td.innerHTML=pData.Note;
											td.style.backgroundColor = 'yellow'
											} else{

											td.innerHTML='';
											//- td.style.backgroundColor = 'red'
											}
										});
										}
									}
								}(userId, dateSC.toLocaleDateString()));
							}

							//- Reset schedule date position for new user
							if (arr[i].dateSC.indexOf("@") > -1 && i!=0){
								dateSC.setDate(dateSC.getDate()-7);
							}else if (arr[i].dateSC.indexOf("@") > -1 && i==0) {

							} else{
								dateSC.setDate(dateSC.getDate()+1);
							}


							//- add new row for next user if user ID changed detected
							if (userDelta != userId){
								var td = document.createElement('td');
								td.setAttribute('class','cell')
								td.appendChild(document.createTextNode(arr[i].dateSC));

								window['tr' + userId] = document.createElement('tr');
								window['tr' + userId].appendChild(td);
								table.appendChild(window['tr' + userId]);
							}else{
								window['tr' + userId].appendChild(td);
								table.appendChild(window['tr' + userId]);
							}	
							userDelta = userId;
							
							//- Keep looping until end of Array
							i++;
							if (i < arr.length ){
								loopArrayDateSC(arr);
							}
						}
					);
				}



				
				if (today > date21LK){

					lockoutDate.setDate(lockoutDate.getDate()+28)

					$.post('/sysObjUpdate', {pData:{name:'lockoutDate', value:lockoutDate.toLocaleDateString()}}).done(function(rData){
						
						//- output lock out Note
						$('#SCNote').text('NOTE: PTO input will not be available after '+ rData.lockoutDate) 
						//- var SCNote = document.createElement('p')
						//- SCNote.innerHTML = 'NOTE: PTO input will not be available after '+ rData.lockoutDate
						//- mainSC.append(SCNote)
						//- loopArrayDateSC(arrListDateSC);
						//- mainSC.append(table);
					});

				}
					//- output lock out Note 
				loopArrayDateSC(arrListDateSC);
				mainSC.append(table);	

				var SCNote = document.createElement('p')
				SCNote.id = 'SCNote'
				SCNote.innerHTML = 'NOTE: PTO input will not be available after '+ rData.lockoutDate
				mainSC.append(SCNote)
			})

			var ul = document.createElement('ul');
			ul.setAttribute('id','PTORadio')
				var li = document.createElement('li');
				li.style.color = 'blue'
				li.style.width = '100px'
					var radio = document.createElement('input');
					radio.setAttribute('type','radio');
					radio.setAttribute('name','PTO');
					radio.setAttribute('value','');
					radio.setAttribute('checked','checked');
				li.appendChild(radio);
				li.appendChild(document.createTextNode('NONE'));
			ul.appendChild(li);

			$.getJSON('/taskOption').done(function(Rdata){

				//- function to list taskOption from return data
				function taskOptionFct(i, taskOption){
					var li = document.createElement('li');
					li.style.color = 'blue'
					li.style.width = '100px'
						var radio = document.createElement('input');
						radio.setAttribute('type','radio');
						radio.setAttribute('name','PTO');
						radio.setAttribute('value',taskOption.description);
					//- radio.setAttribute('checked','checked');
					li.appendChild(radio);
					li.appendChild(document.createTextNode(taskOption.description));

					//- click on list item to bring up the 'x'
					li.addEventListener('click',function(){

						var span = document.createElement('span')
						span.innerHTML = '';
						span.style.color = 'red'
						span.className = "glyphicon glyphicon-remove-circle"
						span.id = 'delGly';
						//- click the 'x' to remove from list
						span.addEventListener('click', function(){

							$.post('/delTaskOption',{taskOption:taskOption.description}).done(function(pData){
								ul.removeChild(li)
							});
							
						});
						li.appendChild(span)
					});
					//- the 'x' disapear on mouseleave
					li.addEventListener('mouseleave',function(){
						if ($('#delGly').length){
							li.removeChild(document.getElementById('delGly'))
						}
					})

					ul.appendChild(li);
				}
				
				//- execute taskOption function with rData
				$.each(Rdata.taskOption, taskOptionFct);

				//- create text box to add new taskOption
				var li = document.createElement('li');
				li.style.color = 'blue'
				li.style.width = '100px'
					var input = document.createElement('input');
					input.style.width = '100px'
					input.setAttribute('placeholder','Add Option');
					input.setAttribute('type','text');
					input.setAttribute('id','taskOption');

					//- add new option to DB when leaving the text box
					input.addEventListener('blur', function(){
						
						var taskOptionData = $("#taskOption").val().toUpperCase();

						$.post('/taskOption',{taskOption:taskOptionData}).done(function(pData){
						
							if (pData.created){
								taskOptionFct(i, pData.taskOption);
								$('#taskOption').val('')
								ul.appendChild(li)
							}else{
								$('#taskOption').val('')
							}
						});
					});
					li.appendChild(input)
				ul.appendChild(li)
				mainSC.append(ul);
			});
		}


		
	

		

		

			
			

			


