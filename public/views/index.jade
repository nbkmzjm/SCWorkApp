extends ../views/layout/layout.jade

	
block title 
	title Home

block header
	include ../views/layout/header.jade

block horMenu
	include ../views/layout/horMenu.jade

block content
	#container
		//- input(type='text' id='calendar')

		#calenderPick
		br
		#mainSC
		#SCNoteDiv
		nav(class="navbar navbar-default" id="taskOptionDiv")
	


append scripts 
	script(src="public/fnLib/homeFn.js")
	script.
		
		$(function (){
			$('[data-toggle="popover"]').popover(); 
						
			calendarPick();
	
			$.post('/ajaxUser').done(mainSC);



		});

		

		
		var getKeys = function(obj){
		   var keys = [];
		   for(var key in obj){
		      keys.push(key);
		   }
		   return keys;
		}

			
		
		
	


		

		function mainSC(data){
			//- alert(JSON.stringify(data, null, 4))
			this.data = data
			var mainSC = $('#mainSC');
			mainSC.html('');

			var curDate = $('#calendar').val();
			var curSunday = getSunday(new Date(curDate));
			
			var dateSC = new Date(curSunday);
			var days = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];

			
			var table = document.createElement('table');
			table.setAttribute('id', 'main');
			table.setAttribute('class','table table-striped')
			var tr = document.createElement('tr');
				var td = document.createElement('td');
					td.appendChild(document.createTextNode('User'));
					
				tr.appendChild(td);
				for (var i=0; i<7; i++){
					 
					var td = document.createElement('td');
					td.appendChild(document.createTextNode(days[dateSC.getDay()]));
					td.appendChild(document.createElement('br'))
					td.appendChild(document.createTextNode(dateSC.toFullDate()))
					tr.appendChild(td);

					dateSC.setDate(dateSC.getDate()+1);
					
					}
			table.appendChild(tr);
			dateSC = new Date(curSunday);

			//- Create DateSC array with userID and dateSC
			var users = data.pData.users;
			var arrListDateSC = [];
				
			for (var i=0; i< users.length; i++){
			
				    for (var x=0; x<8; x++){
						var taskSCData = {};
						
						if (x==0){
							taskSCData.userId = users[i].id;
							taskSCData.dateSC = users[i].name;
						}else{
							taskSCData.userId = users[i].id;
							taskSCData.dateSC = dateSC.toFullDate();
							dateSC.setDate(dateSC.getDate()+1);
						}
						arrListDateSC.push(taskSCData);
					}
					
				var dateSC = new Date(curSunday);
			}

			
			$.post('/sysObjRead', {pData:['lockoutDate', 'date21LK']}).done(function(rData){
				
				
				//- alert(JSON.stringify(arrListDateSC, null, 4))
				
				var today = new Date()
				var lockoutDate = new Date(rData.lockoutDate||'4/24/16')
				var date21LK = new Date(rData.lockoutDate||'4/24/16')
				date21LK.setDate(lockoutDate.getDate()-21)

				//- var eDate = dateSC;
				//- eDate.setDate(dateSC.getDate()+7)
								
				$.post('/taskSC',{
					sDate:dateSC
					}).done(function(rData){

					//- alert(alert(JSON.stringify(rData, null, 4)))
					var assign = rData.assign
					
					var curUserTitle = rData.curUserTitle
					var userDelta = 0
					arrListDateSC.forEach(function(item,i){
					
						var userId = item.userId
						var foundSC = function(assign, item){
							for (x = 0; x< assign.length; x++ ){
								if (assign[x].datePos==item.dateSC && assign[x].userId==userId){
								return true
								}
							}
							return false
						}(assign, item)
						if (foundSC){
							var memo = assign[x].Memo
							//- alert('noTE:' + assign[x].Note)
							var td = document.createElement('td');
								td.setAttribute('class','cell')
								
									var a = document.createElement('a')
									a.setAttribute('href','#');
									a.setAttribute('title', memo);
									a.setAttribute('data-toggle','popover');
									
									if (assign[x].Note=='PTO'){
										a.style.color = 'green'
									}else if(assign[x].Note=='PTOR'){
										a.style.color = '#E007EE'
									}else{
										a.style.color = 'blue'
									}
									a.style.fontWeight = 'bold'
									//- alert(assign[x].Note)
									a.appendChild(document.createTextNode(assign[x].Note))
									td.appendChild(a)

									if (memo!==''){
									var span = document.createElement('span')
									
									span.style.color = '#E5C201'
									span.className = "glyphicon glyphicon-comment"
									td.appendChild(span)
									}
								//- alert(userId+'--'+dateSC.toFullDate())
								td.addEventListener('click',function(userId,dateSC){
									return function(){

										
										var selDate = new Date(dateSC)
											
										if (selDate<lockoutDate && (curUserTitle!='Admin' && curUserTitle!='Manager')){
											alert($('#SCNote').text())
										}else{
											var taskSC = $('input[name=PTO]:checked').attr('value');
											//- alert($('a[data-toggle=popover]').text())

											var memo = $('#memo').val()
											
											$.post('/dateSC', {postdata:{userId: userId, dateSC:dateSC, taskSC:taskSC, memo:memo}}).done(function(pData){

												if (pData.authorized == false) {
													alert('You are not authorized for this action')
												}else if(!!pData.deleted){
													td.innerHTML='';
													td.style.backgroundColor = 'red'
												}else if(!!pData.Note){
												
												td.innerHTML=pData.Note;
												td.style.backgroundColor = 'yellow'
												} 
											});
										}
									}

								}(userId, dateSC.toFullDate()));
						}else{
							console.log('No note')
							var td = document.createElement('td');
								td.setAttribute('class','cell')
								td.appendChild(document.createTextNode(""));

							td.addEventListener('click',function(userId,dateSC){
								
								return function(){
									var selDate = new Date(dateSC)
									
									//- Prevent user to request after lockoutDate
									if (selDate<lockoutDate && (curUserTitle!='Admin' && curUserTitle!='Manager')){
										alert($('#SCNote').text())
									}else{
									//- retrieved taskOption value from radio botton
									var taskSC = $('input[name=PTO]:checked').attr('value');
									var memo = $('#memo').val()
									//- console.log(memo)

									//- save or update taskOption value into DB if not existed
									$.post('/dateSC', {postdata:{userId: userId, dateSC:dateSC, taskSC:taskSC, memo:memo}}).done(function(pData){
										
										//- Only allow signed in user to edit their request
										if (pData.authorized == false) {
											alert('You are not authorized for this action')
										}else if(!!pData.Note){
										
										td.innerHTML=pData.Note;
										td.style.backgroundColor = 'yellow'
										} else{

										td.innerHTML='';
										//- td.style.backgroundColor = 'red'
										}
									});
									}
								}
							}(userId, dateSC.toFullDate()));
						}
						//- alert(i+'i')
						//- Reset schedule date position for new user
						if (item.dateSC.lastIndexOf("/") !== 5 && i!=0){
							dateSC.setDate(dateSC.getDate()-7);
						}else if (item.dateSC.indexOf("/") !== 5 && i==0) {

						} else{
							dateSC.setDate(dateSC.getDate()+1);
						}


						//- add new row for next user if user ID changed detected
						if (userDelta != userId){
							var td = document.createElement('td');
							td.setAttribute('class','cell')
							td.appendChild(document.createTextNode(item.dateSC));
							//- alert(arr[i].dateSC)
							window['tr' + userId] = document.createElement('tr');
							window['tr' + userId].appendChild(td);
							table.appendChild(window['tr' + userId]);
						}else{
							window['tr' + userId].appendChild(td);
							table.appendChild(window['tr' + userId]);
						}	
						userDelta = userId;
					})
				})	


				//- var i = 0;
				//- var userDelta = 0;
				//- Using array to assign userID and dateSc to cell of shcedule table 
				//- loopArrayDateSC(arrListDateSC);
				function loopArrayDateSC(arr){
				
					//- Pull taskSC from assign DB with provided userID and dateSC DB 
					$.post('/taskSC', {postdata:{userId: arr[i].userId, dateSC:arr[i].dateSC}}).done(
						function(assigndata){
							
							


							//- display taskSC if found otherwise display blank
							if(!!assigndata.assign){

								var userId = assigndata.assign.userId;
								var taskSC = assigndata.assign.Note;
								var curUserTitle = assigndata.curUserTitle;
								var memo = assigndata.assign.Memo;
								var td = document.createElement('td');
								td.setAttribute('class','cell')
								
									var a = document.createElement('a')
									a.setAttribute('href','#');
									a.setAttribute('title', memo);
									a.setAttribute('data-toggle','popover');
									a.appendChild(document.createTextNode(taskSC))
									td.appendChild(a)

									if (memo!==''){
									var span = document.createElement('span')
									
									span.style.color = '#E5C201'
									span.className = "glyphicon glyphicon-comment"
									td.appendChild(span)
									}
								td.addEventListener('click',function(userId,dateSC){
									return function(){
										
										var selDate = new Date(dateSC)
											
										if (selDate<lockoutDate && (curUserTitle!='Admin' && curUserTitle!='Manager')){
											alert($('#SCNote').text())
										}else{
											var taskSC = $('input[name=PTO]:checked').attr('value');
											var memo = $('#memo').val()
											$.post('/dateSC', {postdata:{userId: userId, dateSC:dateSC, taskSC:taskSC, memo:memo}}).done(function(pData){

												if (pData.authorized == false) {
													alert('You are not authorized for this action')
												}else if(!!pData.deleted){
													td.innerHTML='';
													td.style.backgroundColor = 'red'
												}else if(!!pData.Note){
												
												td.innerHTML=pData.Note;
												td.style.backgroundColor = 'yellow'
												} 
											});
										}
									}

								}(userId, dateSC.toFullDate()));
							} else {
								var userId = assigndata.userId;
								var curUserTitle = assigndata.curUserTitle;
								
								var td = document.createElement('td');
								td.setAttribute('class','cell')
								td.appendChild(document.createTextNode(""));

								//- Click into the cell request PTO
								td.addEventListener('click',function(userId,dateSC){

									return function(){

										var selDate = new Date(dateSC)
										
										//- Prevent user to request after lockoutDate
										if (selDate<lockoutDate && (curUserTitle!='Admin' && curUserTitle!='Manager')){
											alert($('#SCNote').text())
										}else{
										//- retrieved taskOption value from radio botton
										var taskSC = $('input[name=PTO]:checked').attr('value');
										var memo = $('#memo').val()
										//- console.log(memo)

										//- save or update taskOption value into DB if not existed
										$.post('/dateSC', {postdata:{userId: userId, dateSC:dateSC, taskSC:taskSC, memo:memo}}).done(function(pData){
											
											//- Only allow signed in user to edit their request
											if (pData.authorized == false) {
												alert('You are not authorized for this action')
											}else if(!!pData.Note){
											
											td.innerHTML=pData.Note;
											td.style.backgroundColor = 'yellow'
											} else{

											td.innerHTML='';
											//- td.style.backgroundColor = 'red'
											}
										});
										}
									}
								}(userId, dateSC.toFullDate()));
							}

							//- Reset schedule date position for new user
							if (arr[i].dateSC.lastIndexOf("/") !== 5 && i!=0){
								dateSC.setDate(dateSC.getDate()-7);
							}else if (arr[i].dateSC.indexOf("/") !== 5 && i==0) {

							} else{
								dateSC.setDate(dateSC.getDate()+1);
							}


							//- add new row for next user if user ID changed detected
							if (userDelta != userId){
								var td = document.createElement('td');
								td.setAttribute('class','cell')
								td.appendChild(document.createTextNode(arr[i].dateSC));
								//- alert(arr[i].dateSC)
								window['tr' + userId] = document.createElement('tr');
								window['tr' + userId].appendChild(td);
								table.appendChild(window['tr' + userId]);
							}else{
								window['tr' + userId].appendChild(td);
								table.appendChild(window['tr' + userId]);
							}	
							userDelta = userId;
							
							//- Keep looping until end of Array
							i++;
							if (i < arr.length ){
								loopArrayDateSC(arr);
							}
							
						}
					);
				}
				
				if (today > date21LK){

					lockoutDate.setDate(lockoutDate.getDate()+28)

					$.post('/sysObjUpdate', {pData:{name:'lockoutDate', value:lockoutDate.toFullDate()}}).done(function(rData){
						
						//- output lock out Note
						$('#SCNote').text('NOTE: PTO input will not be available after '+ rData.lockoutDate) 
					});

				}

				//- output lock out Note 
				mainSC.append(table);	

				var SCNote = document.createElement('p')
				SCNote.id = 'SCNote'
				SCNote.innerHTML = 'NOTE: PTO input will not be available after '+ rData.lockoutDate
				$('#SCNoteDiv').html(SCNote)
			});

		}	



		$.getJSON('/taskOption').done(function(Rdata){
			var curUserTitle = Rdata.curUserTitle;
			var ul = document.createElement('ul');
			ul.setAttribute('id','PTORadio')
			ul.className = 'nav navbar-nav'

				//- create text box to add new taskOption
				//- if (curUserTitle=='Admin'||curUserTitle=='Manager'){
				//- 	var li = document.createElement('li');
				//- 	li.style.color = 'blue'
				//- 	li.style.width = '100px'
				//- 		var input = document.createElement('input');
				//- 		input.style.width = '100px'
				//- 		input.setAttribute('placeholder','Add Option');
				//- 		input.setAttribute('type','text');
				//- 		input.setAttribute('id','taskOption');

				//- 		//- add new option to DB when leaving the text box
				//- 		input.addEventListener('blur', function(){
							
				//- 			var taskOptionData = $("#taskOption").val().toUpperCase();

				//- 			$.post('/taskOption',{taskOption:taskOptionData}).done(function(pData){
							
				//- 				if (pData.created){
				//- 					taskOptionFct(i, pData.taskOption);
				//- 					$('#taskOption').val('')
				//- 					ul.appendChild(li)
				//- 				}else{
				//- 					$('#taskOption').val('')
				//- 				}
				//- 			});
				//- 		});
				//- 		li.appendChild(input)
				//- 	ul.appendChild(li)
				//- }


				var arrayOption = ['NEW OPTION','SELECT', 'DELETE', 'PTOR']

				arrayOption.forEach(function(taskOption, i){
					var li = document.createElement('li');
					li.style.color = 'blue'
					li.style.width = '120px'
					
						var radio = document.createElement('input');
						radio.setAttribute('type','radio');
						radio.setAttribute('name','PTO');
						radio.setAttribute('value',taskOption);
						if (taskOption=='SELECT'){
							radio.setAttribute('checked','checked');
							}

						if (taskOption=='PTOR'){
							radio.addEventListener('click', function(){
							//- alert('radio click')
							if ($('#memo').length>0){
								ul.removeChild(document.getElementById('memo'))
								}
							var input = document.createElement('input');
							input.style.width = '240px';
							input.setAttribute('placeholder','Add Memo');
							input.setAttribute('type','text');
							input.setAttribute('id','memo');
							ul.insertBefore(input, li)
							})

						} else if(taskOption=='NEW OPTION'){
							radio.addEventListener('click', function(){
							//- alert('radio click')
							if ($('#taskOption').length>0){
								ul.removeChild(document.getElementById('taskOption'))
								}
							var input = document.createElement('input');
							input.style.width = '120px';
							input.setAttribute('placeholder','Add Option');
							input.setAttribute('type','text');
							input.setAttribute('id','taskOption');
							input.addEventListener('blur', function(){
							
								var taskOptionData = $("#taskOption").val().toUpperCase();

								$.post('/taskOption',{taskOption:taskOptionData}).done(function(pData){
								
									if (pData.created){
										taskOptionFct(i, pData.taskOption);
										$('#taskOption').val('')
										ul.appendChild(li)
									}else{
										$('#taskOption').val('')
									}
								});
							});
							ul.insertBefore(input, li)
							})


						}
						
						
					li.appendChild(radio);
					li.appendChild(document.createTextNode(taskOption));
					ul.appendChild(li);

				})
			
			//- function to list taskOption from return data
			function taskOptionFct(i, taskOption){
				if(curUserTitle=='Admin'|| curUserTitle=='Manager'){
					var li = document.createElement('li');
					li.style.color = 'blue'
					li.style.width = '120px'
						var radio = document.createElement('input');
						radio.setAttribute('type','radio');
						radio.setAttribute('name','PTO');
						radio.setAttribute('value',taskOption.description);
						radio.addEventListener('click', function(){
							//- alert('radio click')
							if ($('#memo').length>0){
								ul.removeChild(document.getElementById('memo'))
								}
							var input = document.createElement('input');
							input.style.width = '240px';
							input.setAttribute('placeholder','Add Memo');
							input.setAttribute('type','text');
							input.setAttribute('id','memo');
							ul.insertBefore(input, li)
						})

					//- radio.setAttribute('checked','checked');
					li.appendChild(radio);
					li.appendChild(document.createTextNode(taskOption.description));

					//- click on list item to bring up the 'x'
					li.addEventListener('mouseenter',function(){
						if (li.childNodes.length >2){
								li.removeChild(li.childNodes[2])
							}
						var span = document.createElement('span')
						span.innerHTML = '';
						span.style.color = 'red'
						span.className = "glyphicon glyphicon-remove-circle"
						span.id = 'delGly';
						//- click the 'x' to remove from list
						span.addEventListener('click', function(){

							$.post('/delTaskOption',{taskOption:taskOption.description}).done(function(pData){
								ul.removeChild(li)
							});
							
						});
						li.appendChild(span)
					});
					//- the 'x' disapear on mouseleave
					li.addEventListener('mouseleave',function(){
						if ($('#delGly').length>0){
							li.removeChild(document.getElementById('delGly'))
						}
					})
					ul.appendChild(li);
				}
			}
			
			//- execute taskOption function with rData
			$.each(Rdata.taskOption, taskOptionFct);
			
			$('#taskOptionDiv').html(ul);
		});
	

